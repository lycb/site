{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jennyly/repos/site/pages/posts/[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport matter from 'gray-matter';\n\nfunction PostTemplate(_ref) {\n  var content = _ref.content,\n      data = _ref.data;\n  var frontmatter = data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: frontmatter.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_c = PostTemplate;\n;\n\nPostTemplate.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var slug, content, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            slug = context.query.slug;\n            _context.next = 3;\n            return import(\"../../content/\".concat(slug, \".md\"));\n\n          case 3:\n            content = _context.sent;\n            data = matter(content[\"default\"]);\n            return _context.abrupt(\"return\", _objectSpread({}, data));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default PostTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostTemplate\");","map":{"version":3,"sources":["/Users/jennyly/repos/site/pages/posts/[slug].js"],"names":["React","matter","PostTemplate","content","data","frontmatter","title","getInitialProps","context","slug","query"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,SAASC,YAAT,OAAyC;AAAA,MAAjBC,OAAiB,QAAjBA,OAAiB;AAAA,MAARC,IAAQ,QAARA,IAAQ;AACxC,MAAMC,WAAW,GAAGD,IAApB;AAEA,sBACC;AAAA,4BACC;AAAA,gBAAKC,WAAW,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAMA;;KATQD,Y;AASR;;AAEDA,YAAY,CAACK,eAAb;AAAA,uEAA+B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,YAAAA,IADsB,GACbD,OAAO,CAACE,KADK,CACtBD,IADsB;AAAA;AAAA,mBAGR,+BAAwBA,IAAxB,SAHQ;;AAAA;AAGxBN,YAAAA,OAHwB;AAKxBC,YAAAA,IALwB,GAKjBH,MAAM,CAACE,OAAO,WAAR,CALW;AAAA,+DAOlBC,IAPkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA;;AAYA,eAAeF,YAAf","sourcesContent":["import React from 'react';\nimport matter from 'gray-matter';\n\nfunction PostTemplate({ content, data }) {\n\tconst frontmatter = data\n\n\treturn (\n\t\t<>\n\t\t\t<h1>{frontmatter.title}</h1>\n\t\t\t<p>{content}</p>\n\t\t</>\n\t);\n};\n\nPostTemplate.getInitialProps = async (context) => {\n\tconst { slug } = context.query;\n\n\tconst content = await import(`../../content/${slug}.md`);\n\n\tconst data = matter(content.default)\n\n\treturn { ...data }\n\n\treturn { slug };\n}\n\nexport default PostTemplate;"]},"metadata":{},"sourceType":"module"}