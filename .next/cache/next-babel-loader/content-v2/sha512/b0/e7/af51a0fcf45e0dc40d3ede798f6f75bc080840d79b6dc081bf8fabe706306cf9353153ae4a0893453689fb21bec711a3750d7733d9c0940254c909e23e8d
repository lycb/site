{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jennyly/repos/site/pages/posts/[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport matter from 'gray-matter';\nimport styles from './[slug].module.css';\n\nfunction PostTemplate({\n  content,\n  data\n}) {\n  const frontmatter = data;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"styles.title\",\n      children: frontmatter.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"styles.date\",\n      children: frontmatter.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      source: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n;\n\nPostTemplate.getInitialProps = async context => {\n  const {\n    slug\n  } = context.query;\n  const content = await import(`../../content/${slug}.md`);\n  const data = matter(content.default);\n  return _objectSpread({}, data);\n  return {\n    slug\n  };\n};\n\nexport default PostTemplate;","map":{"version":3,"sources":["/Users/jennyly/repos/site/pages/posts/[slug].js"],"names":["React","ReactMarkdown","matter","styles","PostTemplate","content","data","frontmatter","title","date","getInitialProps","context","slug","query","default"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAtB,EAAyC;AACxC,QAAMC,WAAW,GAAGD,IAApB;AAEA,sBACC;AAAA,4BACC;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA,gBAA6BC,WAAW,CAACC;AAAzC;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA,gBAA4BD,WAAW,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC,QAAC,aAAD;AAAe,MAAA,MAAM,EAAEJ;AAAvB;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA,kBADD;AAOA;;AAAA;;AAEDD,YAAY,CAACM,eAAb,GAA+B,MAAOC,OAAP,IAAmB;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAWD,OAAO,CAACE,KAAzB;AAEA,QAAMR,OAAO,GAAG,MAAM,OAAQ,iBAAgBO,IAAK,KAA7B,CAAtB;AAEA,QAAMN,IAAI,GAAGJ,MAAM,CAACG,OAAO,CAACS,OAAT,CAAnB;AAEA,2BAAYR,IAAZ;AAEA,SAAO;AAAEM,IAAAA;AAAF,GAAP;AACA,CAVD;;AAYA,eAAeR,YAAf","sourcesContent":["import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport matter from 'gray-matter';\nimport styles from './[slug].module.css';\n\nfunction PostTemplate({ content, data }) {\n\tconst frontmatter = data;\n\n\treturn (\n\t\t<>\n\t\t\t<p className=\"styles.title\">{frontmatter.title}</p>\n\t\t\t<p className=\"styles.date\">{frontmatter.date}</p>\n\t\t\t<ReactMarkdown source={content} />\n\t\t</>\n\t);\n};\n\nPostTemplate.getInitialProps = async (context) => {\n\tconst { slug } = context.query;\n\n\tconst content = await import(`../../content/${slug}.md`);\n\n\tconst data = matter(content.default);\n\n\treturn { ...data };\n\n\treturn { slug };\n}\n\nexport default PostTemplate;"]},"metadata":{},"sourceType":"module"}